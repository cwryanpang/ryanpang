/* Global Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Open Sans", sans-serif;
  color: #333;
  background-color: #f5f5f5;
  line-height: 1.6;
}

/* Navbar */
.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #ffffff;
  padding: 1rem 2rem;
  border-bottom: 1px solid #ececec;
}

.logo {
  font-size: 1.5rem;
  font-weight: 700;
}

.nav-menu {
  list-style: none;
  display: flex;
  gap: 1rem;
}

.nav-menu li a {
  text-decoration: none;
  color: #333;
  font-weight: 600;
  transition: color 0.3s;
}

.nav-menu li a:hover {
  color: #007bff; /* Adjust highlight color */
}

/* Hamburger menu (mobile) */
.hamburger {
  display: none;
  cursor: pointer;
  flex-direction: column;
  gap: 5px;
}

.bar {
  width: 25px;
  height: 3px;
  background-color: #333;
  border-radius: 2px;
}

/* Hero Section */
.hero {
  background: linear-gradient(
      rgba(0, 0, 0, 0.4),
      rgba(0, 0, 0, 0.4)
    ),
    url("https://via.placeholder.com/1500x800") no-repeat center center/cover;
  color: #fff;
  text-align: center;
  padding: 7rem 2rem;
}

.hero-content {
  max-width: 600px;
  margin: 0 auto;
}

.hero-content h1 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.highlight {
  color: #007bff;
}

.subheading {
  font-size: 1.2rem;
  margin-bottom: 2rem;
}

.btn {
  display: inline-block;
  text-decoration: none;
  padding: 0.8rem 1.5rem;
  border-radius: 5px;
  transition: background-color 0.3s;
  font-weight: 600;
}

.primary-btn {
  background-color: #007bff;
  color: #fff;
}

.primary-btn:hover {
  background-color: #0056b3;
}

.secondary-btn {
  background-color: #fff;
  color: #007bff;
  border: 2px solid #007bff;
}

.secondary-btn:hover {
  background-color: #e6f0ff;
}

/* About Section */
.about {
  background-color: #ffffff;
  padding: 3rem 2rem;
  text-align: center;
}

.about h2 {
  margin-bottom: 2rem;
  font-size: 2rem;
}

.about-content {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  max-width: 900px;
  margin: 0 auto;
}

.profile-img {
  border-radius: 50%;
  width: 150px;
  height: 150px;
  object-fit: cover;
}

/* Projects Section */
.projects {
  padding: 3rem 2rem;
  background-color: #f5f5f5;
}

.projects h2 {
  text-align: center;
  margin-bottom: 2rem;
  font-size: 2rem;
}

.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
  max-width: 1100px;
  margin: 0 auto;
}

.project-card {
  background-color: #fff;
  border-radius: 5px;
  overflow: hidden;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.project-image {
  width: 100%;
  height: auto;
  display: block;
}

.project-info {
  padding: 1rem;
}

.project-info h3 {
  margin-bottom: 0.5rem;
}

/* Contact Section */
.contact {
  padding: 3rem 2rem;
  background-color: #ffffff;
  text-align: center;
}

.contact h2 {
  margin-bottom: 1.5rem;
  font-size: 2rem;
}

.contact p {
  max-width: 600px;
  margin: 0 auto 1.5rem;
}

.contact-links {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

/* Footer */
footer {
  background-color: #f5f5f5;
  text-align: center;
  padding: 1rem;
  font-size: 0.9rem;
}

/* Responsive Media Queries */
@media (max-width: 768px) {
  .about-content {
    flex-direction: column;
  }

  .hamburger {
    display: flex;
  }

  .nav-menu {
    position: absolute;
    top: 60px;
    right: 2rem;
    background-color: #ffffff;
    flex-direction: column;
    gap: 0;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    display: none;
  }

  .nav-menu li {
    margin: 0;
  }

  .nav-menu li a {
    display: block;
    padding: 1rem;
    border-bottom: 1px solid #ececec;
  }

  .nav-menu.show {
    display: flex;
  }
}
 
// 1. Select the element where the typing occurs
const typewriter = document.getElementById("typewriter");

// 2. Array of job titles to cycle
const roles = [
  "Business Analyst",
  "UX Designer",
  "System Analyst",
  "Data Analyst",
  "Project Manager"
  "Digital Marketer"
];

// 3. Define variables to track
let roleIndex = 0;    // which role we're on
let charIndex = 0;    // which character we're typing
let isDeleting = false; // whether we are currently deleting text

// Customize speeds (in milliseconds)
const TYPING_SPEED = 100;   // speed of typing each letter
const ERASING_SPEED = 80;   // speed of erasing each letter
const PAUSE_AFTER_TYPING = 1500; // pause before start erasing
const PAUSE_AFTER_ERASING = 300;  // pause before start typing next title

function typeAnimation() {
  // Current role we’re working on
  const currentRole = roles[roleIndex];
  
  if (!isDeleting) {
    // Typing forward
    typewriter.textContent = currentRole.slice(0, charIndex + 1);
    charIndex++;

    // If we've reached the full length of the currentRole
    if (charIndex === currentRole.length) {
      // Pause, then start erasing
      setTimeout(() => {
        isDeleting = true;
        typeAnimation();
      }, PAUSE_AFTER_TYPING);
    } else {
      // Continue typing
      setTimeout(typeAnimation, TYPING_SPEED);
    }
  } else {
    // Erasing
    typewriter.textContent = currentRole.slice(0, charIndex - 1);
    charIndex--;

    // If the text is fully erased
    if (charIndex === 0) {
      isDeleting = false;
      // Move to the next role, wrap around if at the end
      roleIndex = (roleIndex + 1) % roles.length;
      setTimeout(typeAnimation, PAUSE_AFTER_ERASING);
    } else {
      // Continue erasing
      setTimeout(typeAnimation, ERASING_SPEED);
    }
  }
}

// Start the typing effect
typeAnimation();

#typewriter {
  /* The “cursor” is just a right border */
  border-right: 2px solid #333; 
  /* Make the border blink (transparent → solid → transparent) */
  animation: blink-caret 0.8s steps(1) infinite;
}

@keyframes blink-caret {
  50% {
    border-color: transparent;
  }
}

.typing-container {
  display: inline-block;
  min-width: 16ch; 
  white-space: nowrap; 
  overflow: hidden;
  vertical-align: bottom;
}

